{"version":3,"file":"static/js/959.a57d2301.chunk.js","mappings":"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","sources":["app/components/common/Searchbar/Searchbar.tsx","app/components/common/Searchbar/index.ts","app/components/common/Skeletons/Shimmer.tsx","app/components/common/Skeletons/SkeletonElement.tsx","app/components/common/Skeletons/Estates/SkeletonEstateCard.tsx","app/components/common/Skeletons/Estates/SkeletonEstatesList.tsx","app/components/pages/EstatesPage/index.ts","app/components/pages/EstatesPage/EstatesPage.tsx"],"sourcesContent":["import React from \"react\";\r\nimport Button from \"../Button\";\r\nimport { TextField } from \"../Fields\";\r\nimport IconSvg from \"../IconSvg\";\r\n\r\ninterface ISearchbar {\r\n    label: string;\r\n    value: string;\r\n    error?: string;\r\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nconst Searchbar: React.FC<ISearchbar> = ({ label, value, onChange, error }) => {\r\n    return (\r\n        <div className=\"searchbar\">\r\n            <TextField\r\n                className=\"searchbar__input\"\r\n                name={\"search\"}\r\n                onChange={onChange}\r\n                value={value}\r\n                placeholder={label}\r\n                error={error}\r\n            />\r\n            <Button className=\"searchbar__btn\">\r\n                <IconSvg name=\"search\" svgClass=\"searchbar__icon\" />\r\n            </Button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(Searchbar);\r\n","import Searchbar from \"./Searchbar\";\r\nexport default Searchbar;\r\n","import React from \"react\";\r\n\r\nconst Shimmer: React.FC = () => {\r\n    return (\r\n        <div className=\"shimmer-wrapper\">\r\n            <div className=\"shimmer\"></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Shimmer;\r\n","import React from \"react\";\r\n\r\ninterface ISkeletonElement {\r\n    type: string;\r\n}\r\n\r\nconst SkeletonElement: React.FC<ISkeletonElement> = ({ type }) => {\r\n    const classes = `skeleton ${type}`;\r\n\r\n    return <div className={classes}></div>;\r\n};\r\n\r\nexport default SkeletonElement;\r\n","import React from \"react\";\r\nimport Shimmer from \"../Shimmer\";\r\nimport SkeletonElement from \"../SkeletonElement\";\r\n\r\ninterface ISkeletonEstateCard {\r\n    theme?: string;\r\n}\r\n\r\nconst SkeletonEstateCard: React.FC<ISkeletonEstateCard> = ({ theme }) => {\r\n    const themeClass = theme || \"light\";\r\n\r\n    return (\r\n        <div className={`skeleton-wrapper ${themeClass}`}>\r\n            <div className=\"skeleton-estate\">\r\n                <SkeletonElement type=\"image\" />\r\n                <div className=\"skeleton-estate__content\">\r\n                    <SkeletonElement type=\"estate-price-title\" />\r\n                    <SkeletonElement type=\"estate-info-title\" />\r\n                    <SkeletonElement type=\"location\" />\r\n                    <SkeletonElement type=\"text\" />\r\n                    <SkeletonElement type=\"line\" />\r\n                    <div className=\"skeleton-buttons\">\r\n                        <SkeletonElement type=\"estate-favourite\" />\r\n                        <SkeletonElement type=\"estate-button\" />\r\n                        <SkeletonElement type=\"estate-button\" />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <Shimmer />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SkeletonEstateCard;\r\n","import React from \"react\";\r\nimport SkeletonElement from \"../SkeletonElement\";\r\nimport SkeletonEstateCard from \"./SkeletonEstateCard\";\r\n\r\ninterface ISkeletonPostsList {\r\n    count?: number;\r\n}\r\n\r\nconst SkeletonPostsList: React.FC<ISkeletonPostsList> = ({ count = 6 }) => {\r\n    return (\r\n        <div className=\"skeleton-estates\">\r\n            {/* <SkeletonElement type=\"estate-title\" /> */}\r\n            <ul className=\"skeleton-estates__list\">\r\n                {Array(count)\r\n                    .fill(\"\")\r\n                    .map((_, index) => (\r\n                        <li\r\n                            key={count - index}\r\n                            className=\"skeleton-estates__item\"\r\n                        >\r\n                            <SkeletonEstateCard />\r\n                        </li>\r\n                    ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SkeletonPostsList;\r\n","import EstatesPage from \"./EstatesPage\";\r\nexport default EstatesPage;\r\n","import queryString from \"query-string\";\r\nimport React, { useCallback, useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { pageSizesList } from \"../../../constants/appFilter\";\r\nimport { USER_FILTER_KEY } from \"../../../constants/sessionStorageConfig\";\r\nimport { useFilters, usePaginate, useSearch, useSort } from \"../../../hooks\";\r\nimport { useAppDispatch, useStateSelector } from \"../../../store\";\r\nimport { getBookingList } from \"../../../store/slices/booking\";\r\nimport {\r\n    getEstatesLoadingStatus,\r\n    getFilteredEstates,\r\n    loadFilteredEstatesList\r\n} from \"../../../store/slices/estates\";\r\nimport Pagination from \"../../common/Pagination\";\r\nimport Searchbar from \"../../common/Searchbar\";\r\nimport { SkeletonEstatesList } from \"../../common/Skeletons/Estates\";\r\nimport {\r\n    EstateDirection,\r\n    EstatesFilter,\r\n    EstatesList,\r\n    EstateSort,\r\n    EstatesRecommended\r\n} from \"../../ui/Estates\";\r\n\r\nconst EstatesPage: React.FC = () => {\r\n    const [direction, setDirection] = useState<string>(\"tiles\");\r\n    const { search } = useLocation();\r\n    const { typeId, cityId } = queryString.parse(search);\r\n    const dispatch = useAppDispatch();\r\n    const estates = useStateSelector(getFilteredEstates());\r\n    const estatesLoading = useStateSelector(getEstatesLoadingStatus());\r\n    const bookingList = useStateSelector(getBookingList());\r\n    const { handleFilter, filteredItems } = useFilters(\r\n        estates || [],\r\n        bookingList || [],\r\n        USER_FILTER_KEY\r\n    );\r\n\r\n    const { filteredData, searchTerm, setSearchTerm, handleChangeSearch } =\r\n        useSearch(filteredItems || [], {\r\n            searchBy: \"title\"\r\n        });\r\n    const { sortedItems, sortBy, setSortBy } = useSort(filteredData || [], {\r\n        path: \"title\",\r\n        order: \"desc\"\r\n    });\r\n    const {\r\n        itemsListCrop: estatesListCrop,\r\n        page,\r\n        limit,\r\n        handlePageChange,\r\n        handleLimitChange\r\n    } = usePaginate(sortedItems || [], pageSizesList[1].value, 1);\r\n\r\n    const handleSort = useCallback(\r\n        ({ target }: React.ChangeEvent<HTMLInputElement>) => {\r\n            setSortBy(JSON.parse(target.value || \"{}\"));\r\n            handlePageChange(1);\r\n        },\r\n        [handlePageChange, setSortBy]\r\n    );\r\n\r\n    const handleResetFilters = useCallback(() => {\r\n        setSearchTerm(\"\");\r\n        setSortBy({ path: \"title\", order: \"desc\" });\r\n        handleLimitChange({ target: pageSizesList[1] });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        dispatch(loadFilteredEstatesList({ typeId, cityId }));\r\n    }, [search]);\r\n\r\n    const setDirectionList = () => {\r\n        setDirection(\"list\");\r\n    };\r\n    const setDirectionTiels = () => {\r\n        setDirection(\"tiles\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <EstatesRecommended />\r\n            <EstatesFilter\r\n                onFilter={handleFilter}\r\n                onReset={handleResetFilters}\r\n            />\r\n            <div className=\"estates__container _container\">\r\n                <div className=\"estates-products\">\r\n                    <div className=\"estates-products__header\">\r\n                        <div\r\n                            className={\r\n                                \"estates-products__select product-header__items\"\r\n                            }\r\n                        >\r\n                            <EstateSort\r\n                                sortBy={sortBy}\r\n                                onSort={handleSort}\r\n                                limit={limit}\r\n                                handleLimitChange={handleLimitChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"estates-products__search product-header__items\">\r\n                            <Searchbar\r\n                                label=\"Поиск по названию...\"\r\n                                value={searchTerm}\r\n                                onChange={handleChangeSearch}\r\n                            />\r\n                        </div>\r\n                        <div className=\"estates-products__view estates-view product-header__items\">\r\n                            <EstateDirection\r\n                                setDirectionList={setDirectionList}\r\n                                setDirectionTiels={setDirectionTiels}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {!estatesLoading ? (\r\n                    <div className={\"estates-products__row \" + direction}>\r\n                        <EstatesList estates={estatesListCrop} />\r\n                    </div>\r\n                ) : (\r\n                    <SkeletonEstatesList />\r\n                )}\r\n\r\n                {sortedItems.length > limit && (\r\n                    <div className=\"estates-products__pagination\">\r\n                        <Pagination\r\n                            itemsCount={sortedItems.length}\r\n                            pageSize={limit}\r\n                            currentPage={page}\r\n                            onPageChange={handlePageChange}\r\n                        />\r\n                        <p className=\"estates-products__pagination-info\">\r\n                            {`${(page - 1) * limit || 1} -  ${\r\n                                limit * page > estates.length\r\n                                    ? estates.length\r\n                                    : limit * page\r\n                            } из ${estates.length} вариантов аренды`}\r\n                        </p>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EstatesPage;\r\n"],"names":["Searchbar","label","value","onChange","error","className","name","placeholder","Button","IconSvg","svgClass","React","type","classes","themeClass","theme","count","Array","fill","map","_","index","useState","direction","setDirection","search","useLocation","queryString","typeId","cityId","dispatch","useAppDispatch","estates","useStateSelector","getFilteredEstates","estatesLoading","getEstatesLoadingStatus","bookingList","getBookingList","useFilters","USER_FILTER_KEY","handleFilter","filteredItems","useSearch","searchBy","filteredData","searchTerm","setSearchTerm","handleChangeSearch","useSort","path","order","sortedItems","sortBy","setSortBy","usePaginate","pageSizesList","estatesListCrop","itemsListCrop","page","limit","handlePageChange","handleLimitChange","handleSort","useCallback","target","JSON","parse","handleResetFilters","useEffect","loadFilteredEstatesList","Estates","onFilter","onReset","onSort","setDirectionList","setDirectionTiels","SkeletonEstatesList","length","Pagination","itemsCount","pageSize","currentPage","onPageChange"],"sourceRoot":""}