{"version":3,"file":"static/js/152.78a0ae11.chunk.js","mappings":"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","sources":["app/components/common/Pagination/index.ts","app/components/common/Pagination/Pagination.tsx","app/components/ui/Booking/Booking/index.ts","app/components/ui/Booking/Booking/Booking.tsx","app/components/ui/Booking/BookingCard/index.ts","app/components/ui/Booking/BookingCard/BookingCard.tsx","app/components/ui/Booking/BookingList/index.ts","app/components/ui/Booking/BookingList/BookingList.tsx","app/components/ui/Booking/index.ts","app/components/ui/Modals/SuccessModal/index.ts","app/components/ui/Modals/SuccessModal/SuccessModal.tsx","app/components/ui/Modals/CheckModal/index.ts","app/components/ui/Modals/CheckModal/CheckModal.tsx","app/components/ui/Modals/TicketModal/index.ts","app/components/ui/Modals/TicketModal/TicketModal.tsx","app/components/ui/Modals/index.ts","app/components/pages/BookingPage/index.ts","app/components/pages/BookingPage/BookingPage.tsx","app/layouts/userBooking.tsx"],"sourcesContent":["import Pagination from \"./Pagination\";\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\ninterface IPagination {\r\n    itemsCount: number;\r\n    pageSize: number;\r\n    currentPage: number;\r\n    onPageChange: (pageIndex: number) => void;\r\n}\r\n\r\nconst Pagination: React.FC<IPagination> = ({\r\n    itemsCount,\r\n    pageSize,\r\n    currentPage,\r\n    onPageChange\r\n}) => {\r\n    const pageCount = Math.ceil(itemsCount / pageSize);\r\n    if (pageCount === 1) return null;\r\n    const pages = Array.from({ length: pageCount }, (_, index) => index + 1);\r\n\r\n    return (\r\n        <ul className=\"pagination\">\r\n            {pages.map((page: number) => (\r\n                <li\r\n                    className={\r\n                        \"pagination__item \" +\r\n                        (page === currentPage ? \"_active\" : \"\")\r\n                    }\r\n                    key={\"page_\" + page}\r\n                >\r\n                    <span onClick={() => onPageChange(page)}>{page}</span>\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default Pagination;\r\n","import Booking from \"./Booking\";\r\nexport default Booking;\r\n","import React from \"react\";\r\nimport { useDialog } from \"../../../../hooks\";\r\nimport {\r\n    getCurrentUserData,\r\n    getCurrentUserId,\r\n    useStateSelector\r\n} from \"../../../../store\";\r\nimport { getBookingById } from \"../../../../store/slices/booking\";\r\nimport Loader from \"../../../common/Loader\";\r\nimport { BookingForm } from \"../../Forms\";\r\nimport SuccessModal from \"../../Modals\";\r\n\r\ninterface IBooking {\r\n    _id: string;\r\n    price: number;\r\n}\r\n\r\nconst Booking: React.FC<IBooking> = ({ _id, price }) => {\r\n    const currentUserId = useStateSelector(getCurrentUserId());\r\n    const currentBooking = useStateSelector(\r\n        getBookingById({ _id: currentUserId })\r\n    );\r\n    const { open: openDialog, handleClickOpen, handleClose } = useDialog();\r\n\r\n    return (\r\n        <>\r\n            <BookingForm\r\n                id={_id}\r\n                price={price}\r\n                onOpenDialog={handleClickOpen}\r\n            />\r\n            {openDialog && currentBooking && (\r\n                <SuccessModal\r\n                    currentBooking={currentBooking}\r\n                    open={openDialog}\r\n                    onClose={handleClose}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Booking;\r\n","import BookingCard from \"./BookingCard\";\r\nexport default BookingCard;\r\n","import React from \"react\";\r\nimport Button from \"../../../common/Button\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getUserById } from \"../../../../store/slices/users\";\r\nimport { deleteUserBooking } from \"../../../../store/slices/booking\";\r\nimport { BookingType } from \"../../../../types/types\";\r\nimport { useAppDispatch, useStateSelector } from \"../../../../store\";\r\nimport { getEstateById } from \"../../../../store/slices/estates\";\r\nimport { useDialog } from \"../../../../hooks\";\r\nimport { getFormatDate } from \"../../../../utils/dateHelpers\";\r\nimport { CheckModal } from \"../../Modals\";\r\n\r\ntype BookingCardProps = {\r\n    item: BookingType;\r\n    role: string | undefined;\r\n};\r\n\r\nconst BookingCard: React.FC<BookingCardProps> = ({ item, role = \"USER\" }) => {\r\n    const dispatch = useAppDispatch();\r\n    const bookingAuthor = useStateSelector(getUserById(item.userId));\r\n    const estate = useStateSelector(getEstateById(item.estateId));\r\n    const { open, handleClickOpen, handleClose } = useDialog();\r\n    const navigate = useNavigate();\r\n\r\n    const deleteBooking = (booking: any) => {\r\n        dispatch(deleteUserBooking(booking._id));\r\n    };\r\n\r\n    const isOwnerOrAdmin =\r\n        role === \"ADMIN\" || bookingAuthor?._id === item.userId;\r\n\r\n    if (estate && bookingAuthor) {\r\n        return (\r\n            <div className=\"booking__card\">\r\n                <div className=\"booking-header\">\r\n                    <ul className=\"booking-header__list\">\r\n                        <li className=\"booking-header__item\">\r\n                            <h3 className=\"booking-header__title\">\r\n                                Номер товара:\r\n                            </h3>\r\n                            <p className=\"booking-header__text\">{item._id}</p>\r\n                        </li>\r\n                        <li className=\"booking-header__item\">\r\n                            <h3 className=\"booking-header__title\">Товар:</h3>\r\n                            <p className=\"booking-header__text\">\r\n                                {estate.title}\r\n                            </p>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"booking__date date-booking\">\r\n                    <p className=\"date-booking__text\">\r\n                        <span className=\"date-booking__title\">Заезд:</span>{\" \"}\r\n                        <span className=\"date-booking__description\">\r\n                            {getFormatDate(item.entry)} в 13:00\r\n                        </span>\r\n                    </p>\r\n                    <p className=\"date-booking__text\">\r\n                        <span className=\"date-booking__title\">Выезд:</span>{\" \"}\r\n                        <span className=\"date-booking__description\">\r\n                            {getFormatDate(item.departure)} в 13:00\r\n                        </span>\r\n                    </p>\r\n                </div>\r\n                <div className=\"booking-buttons\">\r\n                    <Button\r\n                        onClick={() => navigate(`/estates/${estate._id}`)}\r\n                        className={\"booking-buttons__item\"}\r\n                    >\r\n                        Страница товара\r\n                    </Button>\r\n                    <Button\r\n                        onClick={handleClickOpen}\r\n                        className={\"booking-buttons__item outlined\"}\r\n                    >\r\n                        Показать чек\r\n                    </Button>\r\n                    {isOwnerOrAdmin && (\r\n                        <Button\r\n                            onClick={() => deleteBooking(item)}\r\n                            className={\"booking-buttons__item cancel\"}\r\n                        >\r\n                            Снять бронь\r\n                        </Button>\r\n                    )}\r\n                </div>\r\n                <CheckModal booking={item} open={open} onClose={handleClose} />\r\n            </div>\r\n        );\r\n    }\r\n    return null;\r\n};\r\n\r\nexport default BookingCard;\r\n","import BookingList from \"./BookingList\";\r\nexport default BookingList;\r\n","import React from \"react\";\r\nimport { usePaginate } from \"../../../../hooks\";\r\nimport { useStateSelector } from \"../../../../store\";\r\nimport {\r\n    getBookingList,\r\n    getUserBooking\r\n} from \"../../../../store/slices/booking\";\r\nimport Pagination from \"../../../common/Pagination\";\r\nimport BookingCard from \"../BookingCard\";\r\n\r\ntype BookingListProps = {\r\n    role?: string;\r\n    currentUserId?: string;\r\n};\r\n\r\nconst BookingList: React.FC<BookingListProps> = ({\r\n    role,\r\n    currentUserId = \"\"\r\n}) => {\r\n    const userBooking = useStateSelector(getUserBooking(currentUserId));\r\n    const bookingList = useStateSelector(getBookingList());\r\n    const { page, itemsListCrop, limit, handlePageChange } = usePaginate(\r\n        role === \"ADMIN\" ? bookingList : userBooking,\r\n        3,\r\n        1\r\n    );\r\n\r\n    return (\r\n        <>\r\n            {itemsListCrop.length > 0 ? (\r\n                <>\r\n                    <ul className=\"booking__list\">\r\n                        {itemsListCrop.map((booking) => (\r\n                            <li key={booking._id} className=\"booking__item\">\r\n                                <BookingCard role={role} item={booking} />\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                    <Pagination\r\n                        currentPage={page}\r\n                        itemsCount={userBooking?.length || bookingList.length}\r\n                        onPageChange={handlePageChange}\r\n                        pageSize={limit}\r\n                    />\r\n                </>\r\n            ) : (\r\n                <p className=\"booking__error-message\">\r\n                    У вас пока нет бронирований\r\n                </p>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BookingList;\r\n","import Booking from \"./Booking\";\r\nimport BookingList from \"./BookingList\";\r\nimport BookingCard from \"./BookingCard\";\r\n\r\nexport { BookingList, BookingCard };\r\nexport default Booking;\r\n","import SuccessModal from \"./SuccessModal\";\r\nexport default SuccessModal;\r\n","import React from \"react\";\r\nimport Button from \"../../../common/Button\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getCurrentUserId, useStateSelector } from \"../../../../store\";\r\nimport { getEstateById } from \"../../../../store/slices/estates\";\r\nimport { BookingType } from \"../../../../types/types\";\r\nimport { getFormatDate } from \"../../../../utils/dateHelpers\";\r\n\r\ntype SuccessModalProps = {\r\n    currentBooking: BookingType;\r\n    open: boolean;\r\n    onClose: () => void;\r\n};\r\n\r\nconst SuccessModal: React.FC<SuccessModalProps> = ({\r\n    currentBooking,\r\n    open,\r\n    onClose,\r\n    ...rest\r\n}) => {\r\n    const navigate = useNavigate();\r\n    const bookedEstate = useStateSelector(\r\n        getEstateById(currentBooking.estateId)\r\n    );\r\n    const currentUserId = useStateSelector(getCurrentUserId());\r\n\r\n    return (\r\n        <div\r\n            className={\"modal\" + (open ? \" _open\" : \"\")}\r\n            {...rest}\r\n            onClick={onClose}\r\n        >\r\n            <div\r\n                className=\"estate-booking__modal\"\r\n                onClick={(e) => e.stopPropagation()}\r\n            >\r\n                <div className=\"estate-booking__modal-success_block\">\r\n                    <h3 className=\"estate-booking__modal-title\">\r\n                        Товар успешно забронирован\r\n                    </h3>\r\n                </div>\r\n                <ul className=\"estate-booking__modal-list\">\r\n                    <li className=\"estate-booking__modal-item\">\r\n                        <span className=\"estate-booking__modal-info\">\r\n                            Товар: {bookedEstate.title}\r\n                        </span>\r\n                    </li>\r\n                    <li className=\"estate-booking__modal-item\">\r\n                        <span className=\"estate-booking__modal-info\">\r\n                            Использование с:{\" \"}\r\n                            {getFormatDate(currentBooking.entry)} (13:00)\r\n                        </span>\r\n                    </li>\r\n                    <li className=\"estate-booking__modal-item\">\r\n                        <span className=\"estate-booking__modal-info\">\r\n                            До: {getFormatDate(currentBooking.departure)}\r\n                            (13:00)\r\n                        </span>\r\n                    </li>\r\n                    <li className=\"estate-booking__modal-item\">\r\n                        <span className=\"estate-booking__modal-info\">\r\n                            Номер брони: {currentBooking._id}\r\n                        </span>\r\n                    </li>\r\n                </ul>\r\n                <div className=\"divider\" />\r\n                <h3 className=\"estate-booking__modal-price\">\r\n                    Итого: {currentBooking.totalPrice} рублей\r\n                </h3>\r\n\r\n                <Button\r\n                    className=\"estate-booking__button\"\r\n                    onClick={() => navigate(`/users/${currentUserId}/booking`)}\r\n                >\r\n                    Мои бронирования\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SuccessModal;\r\n","import CheckModal from \"./CheckModal\";\r\nexport default CheckModal;\r\n","import React from \"react\";\r\nimport { useStateSelector } from \"../../../../store\";\r\nimport { getEstateById } from \"../../../../store/slices/estates\";\r\nimport { BookingType } from \"../../../../types/types\";\r\nimport QRCode from \"react-qr-code\";\r\nimport { getFormatDate } from \"../../../../utils/dateHelpers\";\r\nimport Button from \"../../../common/Button\";\r\n\r\ntype CheckModalProps = {\r\n    booking: BookingType;\r\n    open: boolean;\r\n    onClose: () => void;\r\n};\r\n\r\nconst CheckModal: React.FC<CheckModalProps> = ({ booking, open, onClose }) => {\r\n    const bookedEstate = useStateSelector(getEstateById(booking.estateId));\r\n\r\n    return (\r\n        <div className={\"modal\" + (open ? \" _open\" : \"\")} onClick={onClose}>\r\n            <div className=\"estate-booking__modal\">\r\n                <div onClick={(e) => e.stopPropagation()}>\r\n                    <div className=\"estate-booking__modal-success_block\">\r\n                        <QRCode\r\n                            value={\"Номер бронирования \" + booking._id}\r\n                            size={180}\r\n                        />\r\n                    </div>\r\n                    <ul className=\"estate-booking__modal-list\">\r\n                        <li className=\"estate-booking__modal-item\">\r\n                            <span className=\"estate-booking__modal-info\">\r\n                                Товар: {bookedEstate.title}\r\n                            </span>\r\n                        </li>\r\n                        <li className=\"estate-booking__modal-item\">\r\n                            <span className=\"estate-booking__modal-info\">\r\n                                Использование с: {getFormatDate(booking.entry)}{\" \"}\r\n                                (13:00)\r\n                            </span>\r\n                        </li>\r\n                        <li className=\"estate-booking__modal-item\">\r\n                            <span className=\"estate-booking__modal-info\">\r\n                                До: {getFormatDate(booking.departure)}\r\n                                (13:00)\r\n                            </span>\r\n                        </li>\r\n                        <li className=\"estate-booking__modal-item\">\r\n                            <span className=\"estate-booking__modal-info\">\r\n                                Номер брони: {booking._id}\r\n                            </span>\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"divider\" />\r\n                    <h3 className=\"estate-booking__modal-price\">\r\n                        Итого: {booking.totalPrice} рублей\r\n                    </h3>\r\n                </div>\r\n\r\n                <Button className=\"estate-booking__button\" onClick={onClose}>\r\n                    Закрыть\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CheckModal;\r\n","import TicketModal from \"./TicketModal\";\r\nexport default TicketModal;\r\n","import React from \"react\";\r\nimport Button from \"../../../common/Button\";\r\nimport { ITicket } from \"../../Admin/TicketItem/TicketItem\";\r\n\r\ntype TicketModalProps = {\r\n    ticket: ITicket;\r\n    onRemoveTicket: (id: any) => void;\r\n    open: boolean;\r\n    onClose: () => void;\r\n};\r\n\r\nconst TicketModal: React.FC<TicketModalProps> = ({\r\n    ticket,\r\n    onRemoveTicket,\r\n    open,\r\n    onClose,\r\n    ...rest\r\n}) => {\r\n    const getCauseName = (name: string) => {\r\n        switch (name) {\r\n            case \"errors\":\r\n                return \"Баги\";\r\n            case \"offer\":\r\n                return \"Вопрос\";\r\n            case \"other\":\r\n                return \"Прочее\";\r\n            default:\r\n                return name;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div\r\n            className={\"modal\" + (open ? \" _open\" : \"\")}\r\n            {...rest}\r\n            onClick={onClose}\r\n        >\r\n            <div\r\n                className=\"estate-booking__modal\"\r\n                onClick={(e) => e.stopPropagation()}\r\n            >\r\n                <div>\r\n                    <div className=\"estate-booking__modal-success_block\">\r\n                        <span className=\"admin__ticket-id\">№{ticket._id}</span>\r\n                    </div>\r\n                    <ul className=\"estate-booking__modal-list\">\r\n                        <li className=\"estate-booking__modal-item\">\r\n                            <span className=\"estate-booking__modal-info\">\r\n                                Имя: {ticket.name}\r\n                            </span>\r\n                        </li>\r\n                        <li className=\"estate-booking__modal-item\">\r\n                            <span className=\"estate-booking__modal-info\">\r\n                                Тип: {getCauseName(ticket.cause)}\r\n                            </span>\r\n                        </li>\r\n                        <li className=\"estate-booking__modal-item\">\r\n                            <span className=\"estate-booking__modal-info\">\r\n                                Email: {ticket.email}\r\n                            </span>\r\n                        </li>\r\n                        <li className=\"estate-booking__modal-item\">\r\n                            <span className=\"estate-booking__modal-info\">\r\n                                Сообщение: {ticket.message}\r\n                            </span>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <Button\r\n                    className=\"estate-booking__button\"\r\n                    onClick={() => onRemoveTicket(ticket._id)}\r\n                >\r\n                    Закрыть Тикет\r\n                </Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TicketModal;\r\n","import SuccessModal from \"./SuccessModal\";\r\nimport CheckModal from \"./CheckModal\";\r\nimport TicketModal from \"./TicketModal\";\r\n\r\nexport { CheckModal, TicketModal };\r\nexport default SuccessModal;\r\n","import BookingPage from \"./BookingPage\";\r\nexport default BookingPage;\r\n","import React from \"react\";\r\nimport { getCurrentUserId, useStateSelector } from \"../../../store\";\r\nimport { getBookingLoading } from \"../../../store/slices/booking\";\r\nimport Loader from \"../../common/Loader\";\r\nimport { BookingList } from \"../../ui/Booking\";\r\n\r\nconst BookingPage: React.FC = () => {\r\n    const currentUserId = useStateSelector(getCurrentUserId());\r\n    const bookingLoading = useStateSelector(getBookingLoading());\r\n\r\n    if (!bookingLoading && currentUserId) {\r\n        return (\r\n            <div className=\"booking\">\r\n                <BookingList currentUserId={currentUserId} />\r\n                <div className=\"booking__push\"></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    return <Loader visible={true} />;\r\n};\r\n\r\nexport default BookingPage;\r\n","import React from \"react\";\r\nimport BookingPage from \"../components/pages/BookingPage\";\r\n\r\nconst UserBooking: React.FC = () => {\r\n    return <BookingPage />;\r\n};\r\n\r\nexport default UserBooking;\r\n"],"names":["itemsCount","pageSize","currentPage","onPageChange","pageCount","Math","ceil","pages","Array","from","length","_","index","className","map","page","onClick","_id","price","currentUserId","useStateSelector","getCurrentUserId","currentBooking","getBookingById","useDialog","openDialog","open","handleClickOpen","handleClose","id","onOpenDialog","onClose","item","role","dispatch","useAppDispatch","bookingAuthor","getUserById","userId","estate","getEstateById","estateId","navigate","useNavigate","isOwnerOrAdmin","title","getFormatDate","entry","departure","Button","booking","deleteUserBooking","userBooking","getUserBooking","bookingList","getBookingList","usePaginate","itemsListCrop","limit","handlePageChange","Pagination","rest","bookedEstate","e","stopPropagation","totalPrice","value","size","ticket","onRemoveTicket","name","getCauseName","cause","email","message","getBookingLoading","Booking","Loader","visible"],"sourceRoot":""}